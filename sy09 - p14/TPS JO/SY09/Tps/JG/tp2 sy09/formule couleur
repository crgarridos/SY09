==========================================================================================
Exercice théorique
========================================================================================
Question 1
----------------------
A=matrix(c(3,4,3,1,4,3,2,3,6,2,1,4),nrow=4,byrow=T)

centre <- function(x)
{
	moy <- apply(x,2,mean)
	res <- t(t(x)- moy)
	res
}

Dp <- diag(rep(1/4,4))
S = t(centre(A))%*%Dp%*%centre(A)
ou

cov.wt(A,method="ML")

//recuperation des valeur et vecteur normalisé et ordonné
valp <- eigen(S)$values
vecp <- eigen(S)$vectors

//verification de la normalisation
t(vecp[,1])%*%vecp[,1]

//pourcentage d'inertie expliqué par axe!!!!!!
I <- valp/sum(valp)*100

--------------------------------
Question 2
--------------------------------

C <- centre(A)%*%M%*%vecp


plot(C[,1],C[,2],type="n")
text(C[,1],C[,2])
abline(h=0)
abline(v=0)

(scale= centre reduit)

--------------------------------
Question 3
--------------------------------
L<-diag(valp)
D <- diag(1/(sqrt((4-1)/4)*sd(centre(A)))) %*% vecp %*% sqrt(L)

# Tracé des graphiques
plot(-1:1,-1:1,type="n",xlab="Axe 1",ylab="Axe 2")
text(D[,1],D[,2]);abline(h=0);abline(v=0)
curve(-sqrt(1-x^2),-1,1,add=TRUE)
curve(sqrt(1-x^2),-1,1,add=TRUE)


--------------------------------
Question 4
--------------------------------
E <- C[,1]%*%t(vecp[,1])
E2 <- C[,1]%*%t(vecp[,1]) + C[,2]%*%t(vecp[,2])
E3 <- C[,1]%*%t(vecp[,1]) + C[,2]%*%t(vecp[,2]) + C[,3]%*%t(vecp[,3])







============================================================================================
TRAITEMENT DES DONNEES CRABS

--------------------------------
Question 1
--------------------------------
library(lattice)
library(MASS)
data(crabs)
crabsquant<-crabs[,4:8]


res<-princomp(crabsquant) 
summary(res)  // pour faire figurer le pourcentage
(res$sdev)^2
res$loadings
res$scores
plot(res) 
biplot(res) 
biplot(res,c(1,3))
biplot(res,c(2,3))

pairs(crabsquant)

--------------------------------
Question 2
--------------------------------
summary(crabsquant)
boxplot(crabsquant)

crabsquant.normes = (crabsquant/crabsquant[,3])
pairs(crabsquant.normes)
res<-princomp(crabsquant.normes) 
summary(res)  // pour faire figurer le pourcentage
(res$sdev)^2
res$loadings
res$scores
plot(res) 
biplot(res) 
biplot(res,c(1,3))
biplot(res,c(2,3))


=======
len = dim(crabs)[1]
class = matrix(nrow=len)

class[which(crabs$sex=="F" & crabs$sp =="O"),]=1
class[which(crabs$sex=="F" & crabs$sp =="B"),]=2
class[which(crabs$sex=="M" & crabs$sp =="O"),]=3
class[which(crabs$sex=="M" & crabs$sp =="B"),]=4

xyplot(predict(res)[,2]~predict(res)[,1], group = class,xlab ="frontal lobe" ,ylab ="rear width")